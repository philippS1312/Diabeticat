version: "1.0"

services:

  #Aus performance Gründen findet die Ausführung gestaffelt statt.

  #================================ Customer-DB Service: ========================================
  customer-db:
    image: ftse/customer-db
    restart: always
    build:
      context: diabeticat-api
      dockerfile: ./DockerfileDB
    container_name: customer-db
    ports:
       - "54323:54323" #Port-Extern : Port-Intern
    healthcheck:
      test: "exit 0"

  #================================ Store-DB Service: ========================================
  store-db:
    image: ftse/store-db
    restart: always
    build:
      context: dvd-rental-store
      dockerfile: ./DockerfileDB
    container_name: store-db
    ports:
      - "54322:54322" #Port-Extern : Port-Intern
    healthcheck:
      test: "exit 0"
    depends_on:
      customer-db:
        condition: service_healthy
  #================================ Film-DB Service: ========================================
  film-db:
    image: ftse/film-db
    restart: always
    build:
      context: dvd-rental-film
      dockerfile: ./DockerfileDB
    container_name: film-db
    ports:
      - "54321:54321" #Port-Extern : Port-Intern
    healthcheck:
      test: "exit 0"
    depends_on:
      store-db:
        condition: service_healthy

  #================================ UI-Wildfly Service: ========================================
  ui-wildfly:
    image: ftse/ui-wildfly
    restart: always
    build:
      context: dvd-rental-ui
      dockerfile: ./DockerfileWildfly
    container_name: ui-wildfly
    ports:
      - "8080:8080"
    depends_on:
      film-db:
        condition: service_healthy
    healthcheck:
      test: "exit 0"

  #================================ Customer-Wildfly Service: ========================================
  customer-wildfly:
    image: ftse/customer-wildfly
    restart: always
    environment:
      - DB_CONNECTION=pgsql
      - DB_HOST=customer-db
      - DB_PORT=54323
      - DB_DATABASE=dvdrentalcustomer
      - DB_USER=postgres
      - DB_PASS=postgres
    build:
      context: diabeticat-api
      dockerfile: ./DockerfileWildfly
    container_name: customer-wildfly
    ports:
      - "8083:8080"
    healthcheck:
      test: "exit 0"
    depends_on:
      ui-wildfly:
        condition: service_healthy

  #================================ Film-Wildfly Service: ========================================

  film-wildfly:
    image: ftse/film-wildfly
    restart: always
    environment:
      - DB_CONNECTION=pgsql
      - DB_HOST=film-db
      - DB_PORT=54321
      - DB_DATABASE=dvdrentalfilm
      - DB_USER=postgres
      - DB_PASS=postgres
    build:
      context: dvd-rental-film
      dockerfile: ./DockerfileWildfly
    container_name: film-wildfly
    ports:
      - "8081:8080"
    depends_on:
      customer-wildfly:
        condition: service_healthy
    healthcheck:
      test: "exit 0"

  #================================ Store-Wildfly Service: ========================================

  store-wildfly:
    image: ftse/store-wildfly
    restart: always
    environment:
      - DB_CONNECTION=pgsql
      - DB_HOST=store-db
      - DB_PORT=54322
      - DB_DATABASE=dvdrentalstore
      - DB_USER=postgres
      - DB_PASS=postgres
    build:
      context: dvd-rental-store
      dockerfile: ./DockerfileWildfly
    container_name: store-wildfly
    ports:
      - "8082:8080"
    depends_on:
      film-wildfly:
        condition: service_healthy
    healthcheck:
      test: "exit 0"












































        ###OLD STUFF ============================================================================================

        #volumes:
        #  - data_db:/var/lib/postgresql
        #environment:
        #  - DATABASE_URL=postgres://postgres:customer-db@localhost:54323/dvdrentalcustomer
        #  - POSTGRES_DB=dvdrentalcustomer
        #  - POSTGRES_USER=postgres
        #  - POSTGRES_PASSWORD=postgres
        #volumes:
        #- ./env-config/postgres.conf:/etc/postgresql.conf
        #- /srv/docker/postgresql:/var/lib/postgresql
        #command:
        #- copy
        #- postgres -c config_file=/etc/postgresql.conf

        #DATABASE_URL: postgres://postgres:customer-db@localhost:54323/dvdrentalcustomer
        #  POSTGRES_PASSWORD: postgres
        #  POSTGRES_DB: dvdrentalcustomer

        #healthcheck:
        #test: "exit 0"

        #:
        #condition: service_healthy


      #volumes:
      #  - data_db:/var/lib/postgresql
      #environment:
      #  - DATABASE_URL=postgres://postgres:customer-db@localhost:54323/dvdrentalcustomer
      #  - POSTGRES_DB=dvdrentalcustomer
      #  - POSTGRES_USER=postgres
      #  - POSTGRES_PASSWORD=postgres
      #volumes:
      #- ./env-config/postgres.conf:/etc/postgresql.conf
      #- /srv/docker/postgresql:/var/lib/postgresql
      #command:
      #- copy
      #- postgres -c config_file=/etc/postgresql.conf

      #DATABASE_URL: postgres://postgres:customer-db@localhost:54323/dvdrentalcustomer
      #  POSTGRES_PASSWORD: postgres
      #  POSTGRES_DB: dvdrentalcustomer

      #healthcheck:
      #test: "exit 0"

#volumes:
  #data_db:





      #... weitere services
      #volumes:
      #- db-data:/etc/data

      #image: postgres
      #restart: always
      #environment:
      # POSTGRES_USER: postgres
      #POSTGRES_PASSWORD: postgres
